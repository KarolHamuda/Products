{"version":3,"sources":["components/context/ContextProvider.js","components/product/CircleColor.js","components/user/UserModal.js","components/product/CapacityPicker.js","components/product/ColorPicker.js","components/product/ProductAbout.js","components/product/Products.js","components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["myContext","createContext","ContextProvider","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","products","finalProduct","isLoading","fetchData","setTimeout","setState","getProductDetails","productID","optionsCapacityID","CapacityID","optionsColorID","ColorID","priceValue","product","id","options","value","createFinalOrderDetails","nameValue","surnameValue","emailValue","streetValue","cityValue","housenumberValue","zipValue","finalProductCopy","objectSpread","console","log","user","name","surname","email","address","street","housenumber","city","postcode","sendData","inherits","createClass","key","_this2","react_default","a","createElement","Provider","updateProduct","updateUser","props","children","Component","CircleColor","_this$props","priceModifier","setColorPriceModifier","setColor","setColorID","colorID","setOptionsColorID","optionColorID","style","backgroundColor","className","onClick","UserModal","handleName","event","target","handleSurname","handleEmail","handleStreet","handleCity","handleHouseNumber","handleZIP","e","preventDefault","context_ContextProvider","Consumer","Modal","assign","size","aria-labelledby","centered","Header","closeButton","Title","Form","onSubmit","handleSubmit","Body","Row","Col","Label","Control","onChange","required","placeholder","Group","controlId","type","Text","Footer","Button","onHide","CapacityPicker","setCapacityPriceModifier","capacityID","optionCapacityID","setOptionsCapacityID","setCapacityID","setCapacity","ColorPicker","capacity","color","backColor","ID","setNewPrice","newPrice","price","colorPriceModifier","capacityPriceModifier","modalShow","modalClose","map","i","values","colors","CircleColor_CircleColor","xs","sm","ButtonToolbar","aria-label","ButtonGroup","CapacityPicker_CapacityPicker","variant","UserModal_UserModal","show","ProductAbout","showColorPicker","showAbout","image","oldPrice","Image","src","fluid","ColorPicker_ColorPicker","Products","Container","react_spinners","sizeUnit","loading","md","ProductAbout_ProductAbout","Layout","Products_Products","App","ContextProvider_ContextProvider","Layout_Layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a6fe9c5.chunk.js","sourcesContent":["import React, { Component, createContext } from 'react'\r\nimport products from '../../products.json';\r\n\r\nconst myContext = createContext();\r\nexport class ContextProvider extends Component {\r\n        state = {\r\n            products: [],\r\n            finalProduct: [],\r\n            isLoading: true\r\n        }\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    fetchData = () => {\r\n        setTimeout(() => {\r\n            this.setState({\r\n            products: products,\r\n            isLoading: false\r\n        })\r\n        }, 1000) \r\n    }\r\n\r\n    getProductDetails = (productID, optionsCapacityID, CapacityID, optionsColorID, ColorID, priceValue) => {\r\n        this.setState({\r\n            finalProduct: {\r\n                product: {\r\n                    id: productID,\r\n                    options: \r\n                    [\r\n                        {\r\n                            id: optionsCapacityID,\r\n                            value: CapacityID\r\n                        },\r\n                        {\r\n                            id: optionsColorID,\r\n                            value: ColorID\r\n                        }\r\n                    ],\r\n                    priceValue\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    createFinalOrderDetails = (nameValue, surnameValue, emailValue, streetValue, cityValue, housenumberValue, zipValue) => {\r\n        let finalProductCopy = {...this.state.finalProduct}\r\n        console.log(finalProductCopy)\r\n        this.setState({\r\n            finalProduct: [\r\n                finalProductCopy,\r\n                {\r\n                user: {\r\n                    name: nameValue,\r\n                    surname: surnameValue,\r\n                    email: emailValue,\r\n                    address: {\r\n                        street: streetValue,\r\n                        housenumber: housenumberValue,\r\n                        city: cityValue,\r\n                        postcode: zipValue\r\n                    }\r\n                }}\r\n            ],\r\n        })\r\n        this.sendData()\r\n    }\r\n\r\n    sendData = () => {\r\n        console.log(this.state.finalProduct)\r\n    }\r\n\r\n  render() {\r\n    \r\n    return (\r\n        <myContext.Provider value={{\r\n            state: this.state,\r\n\r\n            updateProduct: (productID, optionsCapacityID, CapacityID, optionsColorID, ColorID, priceValue) => (\r\n                this.getProductDetails(\r\n                    productID, \r\n                    optionsCapacityID, \r\n                    CapacityID, \r\n                    optionsColorID, \r\n                    ColorID,\r\n                    priceValue\r\n                )\r\n            ),\r\n\r\n            updateUser: (nameValue, surnameValue, emailValue, streetValue, cityValue, housenumberValue, zipValue) => {\r\n                this.createFinalOrderDetails(\r\n                    nameValue, \r\n                    surnameValue, \r\n                    emailValue, \r\n                    streetValue, \r\n                    cityValue, \r\n                    housenumberValue, \r\n                    zipValue\r\n                )\r\n            }\r\n        }}>\r\n\r\n        {this.props.children}\r\n        </myContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default myContext;","import React, { Component } from 'react'\r\nimport './CircleColor.css'\r\n\r\nexport default class CircleColor extends Component {\r\n  render() {\r\n\r\n      const { \r\n        priceModifier, \r\n        setColorPriceModifier, \r\n        name, \r\n        setColor, \r\n        setColorID, \r\n        colorID, \r\n        setOptionsColorID, \r\n        optionColorID \r\n      } = this.props;\r\n\r\n    return (\r\n      <button \r\n        style={{backgroundColor: name}} \r\n        className='CircleColor' \r\n        onClick={()=>\r\n          ((\r\n            setColor(name), \r\n            setColorID(colorID),\r\n            setOptionsColorID(optionColorID),\r\n            setColorPriceModifier(priceModifier)\r\n          ))\r\n      }/>\r\n    )\r\n  }\r\n}\r\n  ","import React, { Component } from 'react'\r\nimport { Modal, Button, Form, Col } from 'react-bootstrap';\r\nimport myContext from '../context/ContextProvider';\r\n\r\nexport default class UserModal extends Component {\r\n  constructor(props) {\r\n  super(props)\r\n\r\n    this.state ={\r\n      nameValue: null,\r\n      surnameValue: null,\r\n      emailValue: null,\r\n      streetValue: null,\r\n      cityValue: null,\r\n      housenumberValue: null,\r\n      zipValue: null\r\n    }\r\n  }\r\n  \r\n  handleName = (event) => this.setState({nameValue: event.target.value});\r\n\r\n  handleSurname = (event) => this.setState({surnameValue: event.target.value});\r\n\r\n  handleEmail = (event) => this.setState({emailValue: event.target.value});\r\n\r\n  handleStreet = (event) => this.setState({streetValue: event.target.value});\r\n\r\n  handleCity = (event) => this.setState({cityValue: event.target.value});\r\n\r\n  handleHouseNumber = (event) => this.setState({housenumberValue: event.target.value});\r\n\r\n  handleZIP = (event) => this.setState({zipValue: event.target.value});\r\n  \r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n    render() {\r\n        return (\r\n          <myContext.Consumer>\r\n            {(value) => (\r\n           \r\n          <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Purchase Order Detail Information\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Modal.Body>\r\n                <Form.Row>\r\n                  <Col>\r\n                    \r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control onChange={this.handleName} required placeholder=\"First name\" />\r\n                  </Col>\r\n                   \r\n                  <Col>\r\n                    \r\n                    <Form.Label>Surame</Form.Label>\r\n                    <Form.Control onChange={this.handleSurname} required placeholder=\"Last name\" />\r\n                    \r\n                  </Col>\r\n                </Form.Row>\r\n\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control onChange={this.handleEmail} required type=\"email\" placeholder=\"Enter email\" />\r\n                    <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formGridAddress1\">\r\n                    <Form.Label>Street</Form.Label>\r\n                    <Form.Control onChange={this.handleStreet} required placeholder=\"1234 Main St\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formGridCity\">\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control onChange={this.handleCity} required />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formGridHouse\">\r\n                    <Form.Label>HouseNumber</Form.Label>\r\n                    <Form.Control onChange={this.handleHouseNumber} required />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formGridZip\">\r\n                    <Form.Label>Zip</Form.Label>\r\n                    <Form.Control onChange={this.handleZIP} required />\r\n                </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button type='submit' onClick={()=>\r\n                  value.updateUser(\r\n                    this.state.nameValue, \r\n                    this.state.surnameValue, \r\n                    this.state.emailValue, \r\n                    this.state.streetValue, \r\n                    this.state.cityValue, \r\n                    this.state.housenumberValue, \r\n                    this.state.zipValue\r\n                  )\r\n                  }>Buy</Button>\r\n              <Button onClick={this.props.onHide}>Cancel</Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n          </Modal>\r\n           )}\r\n           </myContext.Consumer>\r\n        );\r\n      }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport './CapacityPicker.css';\r\n\r\nexport default class CapacityPicker extends Component {\r\n  render() {\r\n    const { \r\n        priceModifier,\r\n        setCapacityPriceModifier,\r\n        name, \r\n        capacityID, \r\n        optionCapacityID, \r\n        setOptionsCapacityID, \r\n        setCapacityID,\r\n        setCapacity\r\n    } = this.props\r\n    return (\r\n        <Button className='CapacityButton' onClick={()=>\r\n            ((\r\n                setCapacity(name),\r\n                setCapacityID(capacityID),\r\n                setOptionsCapacityID(optionCapacityID),\r\n                setCapacityPriceModifier(priceModifier)\r\n            ))\r\n        }>{name}</Button>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Button, ButtonToolbar, ButtonGroup } from 'react-bootstrap';\r\nimport CircleColor from './CircleColor';\r\nimport './ColorPicker.css';\r\nimport UserModal from '../user/UserModal';\r\nimport CapacityPicker from './CapacityPicker';\r\nimport myContext from '../context/ContextProvider';\r\n\r\nexport default class ColorPicker extends Component {\r\n    constructor(...props) {\r\n        super(...props)\r\n\r\n        this.state = {\r\n            backColor: 'white',\r\n            modalShow: false,\r\n            CapacityID: null,\r\n            ColorID: null,\r\n            optionsCapacityID: null,\r\n            optionsColorID: null,\r\n            price: null,\r\n            colorPriceModifier: null,\r\n            capacityPriceModifier: null,\r\n            \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({price: this.props.price})\r\n    }\r\n\r\n    setCapacity = (capacity) => this.setState({capacity: capacity})\r\n\r\n    setColor = (color) => this.setState({backColor: color})\r\n\r\n    setCapacityID = (ID) => this.setState({CapacityID: ID})\r\n\r\n    setColorID = (ID) => this.setState({ColorID: ID})\r\n    \r\n    setOptionsColorID = (ID) => this.setState({optionsColorID: ID})\r\n    \r\n    setOptionsCapacityID = (ID) => this.setState({optionsCapacityID: ID})\r\n\r\n    setNewPrice = (newPrice) => this.setState({price: newPrice})\r\n    \r\n    setColorPriceModifier = (newPrice) => this.setState({colorPriceModifier: newPrice})\r\n\r\n    setCapacityPriceModifier = (newPrice) => this.setState({capacityPriceModifier: newPrice})\r\n    \r\nrender() {\r\n    const {options, productID} = this.props;\r\n\r\n    const Colors = (name, values, id) => (\r\n         name === \"Color\" ? \r\n        (<Row> { \r\n        values.map((colors, i) => (\r\n            <Col key={i}>\r\n                <CircleColor \r\n                    priceModifier={colors.priceModifier}\r\n                    setColorPriceModifier={this.setColorPriceModifier}\r\n                    name={colors.name} \r\n                    colorID={colors.id} \r\n                    optionColorID={id} \r\n                    setColor={this.setColor} \r\n                    setColorID={this.setColorID} \r\n                    setOptionsColorID={this.setOptionsColorID}\r\n                />\r\n            </Col>\r\n        ))}\r\n        </Row>\r\n        ) : (\r\n            null\r\n        )\r\n    );\r\n\r\n    const Capacity = (name, values, id) => (\r\n        name === \"Capacity\" ? \r\n            <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n                <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n                <Row>\r\n                    {(values.map((capacity, i) => (\r\n                        <Col xs={12}>\r\n                            <CapacityPicker \r\n                                priceModifier={capacity.priceModifier}\r\n                                setCapacityPriceModifier={this.setCapacityPriceModifier}\r\n                                name={capacity.name} \r\n                                capacityID={capacity.id} \r\n                                optionCapacityID={id} \r\n                                setCapacity={this.setCapacity} \r\n                                setCapacityID={this.setCapacityID} \r\n                                setOptionsCapacityID={this.setOptionsCapacityID}\r\n                            />\r\n                            </Col>\r\n                    )))}\r\n                    </Row>\r\n                </ButtonGroup>\r\n            </ButtonToolbar>\r\n         : (\r\n            null\r\n        )\r\n    );\r\n\r\n    let modalClose = () => this.setState({ modalShow: false });\r\n\r\n    return (\r\n        <myContext.Consumer>\r\n        {(value) => (\r\n        <div>\r\n            {options.map((options, i) => (\r\n                Colors(options.name, options.values, options.id)\r\n            ))}\r\n                <Row>  \r\n                    <Col xs={4} sm={4} className='CapacityColumn'>\r\n                    {options.map((options, i) => ( \r\n                        Capacity(options.name, options.values, options.id)\r\n                    ))}\r\n                    </Col>\r\n                    <Col xs={4} sm={4} className='Phone' style={{backgroundColor: this.state.backColor}}>\r\n                        <div className='Cellphone'/>\r\n                    </Col>\r\n                    <Col xs={4} sm={4} className='Price'>\r\n                        ${this.state.price + this.state.colorPriceModifier + this.state.capacityPriceModifier}\r\n                    </Col>\r\n                    <Col xs={12}>\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            size=\"lg\"\r\n                            onClick={() => ((\r\n                                this.setState({ modalShow: true }),\r\n                                value.updateProduct(\r\n                                    productID, \r\n                                    this.state.optionsCapacityID, \r\n                                    this.state.CapacityID,\r\n                                    this.state.optionsColorID,\r\n                                    this.state.ColorID,\r\n                                    this.state.price + this.state.colorPriceModifier + this.state.capacityPriceModifier\r\n                                )\r\n                            ))}\r\n                        >\r\n                            Buy\r\n                        </Button>\r\n\r\n                        <UserModal\r\n                            show={this.state.modalShow}\r\n                            onHide={modalClose}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n        </div>\r\n        )}\r\n        </myContext.Consumer>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Image} from 'react-bootstrap'\r\nimport ColorPicker from './ColorPicker'\r\nimport './ProductAbout.css'\r\n\r\nexport default class ProductAbout extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            showAbout: true\r\n        }\r\n    }\r\n\r\n    showColorPicker = () => {\r\n        this.setState({showAbout: !this.state.showAbout})\r\n    }\r\n\r\n  render() {\r\n\r\n      const { name, image, oldPrice, price } = this.props;\r\n\r\n    return (  \r\n      <div>\r\n          { this.state.showAbout ? (\r\n            <Row onClick={()=> this.showColorPicker()}>\r\n                <Col xs={6}>\r\n                    {name}\r\n                    <Image src={image} fluid />\r\n                </Col>\r\n                <Col xs={6} className='PriceDetails'>\r\n                    <Row>\r\n                        <Col xs={12} className='OldPrice'>\r\n                            ${oldPrice}\r\n                        </Col>\r\n                        <Col xs={12} className='CurrentPrice'>\r\n                            ${price}\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row> \r\n        ) : (\r\n            <ColorPicker {...this.props}/>\r\n        )}\r\n      </div> \r\n    )\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport myContext from '../context/ContextProvider';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nimport  ProductAbout  from './ProductAbout';\r\nimport './Products.css'\r\n\r\n\r\n\r\nexport default class Products extends Component {\r\n\r\n  render() {\r\n    return (\r\n    <myContext.Consumer>\r\n      {(value) => (\r\n        <Container>\r\n            <Row className='Body'>\r\n                {value.state.isLoading ? (\r\n                  <div className='sweet-loading'>\r\n                    <ClipLoader\r\n                        sizeUnit={\"px\"}\r\n                        size={260}\r\n                        color={'#8b8b8b'}\r\n                        loading={value.state.isLoading}\r\n                    />\r\n                  </div> \r\n                ) : (\r\n                  value.state.products.map((products, i) => (\r\n                    <Col xs={12} sm={12} md={12} key={i} className='DisplayedProduct' >\r\n                        <ProductAbout \r\n                          name={products.name} \r\n                          image={products.image} \r\n                          oldPrice={products.oldPrice} \r\n                          price={products.price} \r\n                          options={products.options}\r\n                          key={i}\r\n                          productID={products.id}\r\n                        /> \r\n                    </Col>\r\n                  ))\r\n                )} \r\n            </Row>\r\n        </Container>\r\n        )}\r\n    </myContext.Consumer>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Products from './product/Products';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport './Layout.css'\r\n\r\nexport class Layout extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Row className='LayoutRow'>\r\n        <Col xs={0} sm={2} md={3}/>\r\n        <Col xs={12} sm={8} md={6}>\r\n          <Products/>\r\n        </Col>\r\n        <Col xs={0} sm={2} md={3}/>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport { ContextProvider } from './components/context/ContextProvider';\nimport { Layout } from './components/Layout';\n\nclass App extends Component {\n  render() {\n    return (\n      <ContextProvider>\n          <Layout />\n      </ContextProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}